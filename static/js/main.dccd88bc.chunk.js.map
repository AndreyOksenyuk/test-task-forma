{"version":3,"sources":["components/Forma/Forma.module.scss","components/Alert/Alert.module.scss","components/Steps/Steps.module.scss","components/Title/Title.module.scss","assets/Folder.svg","assets/warning.svg","assets/error.svg","assets/success.svg","components/Title/index.js","components/Steps/index.js","redux/forma-reducer.js","components/Forma/InputFile .jsx","components/module/Field/index.js","components/Alert/index.js","components/Forma/Forma.jsx","components/module/isRequiredField.js","components/Forma/FormaContainer.js","App.js","serviceWorker.js","redux/redux-store.js","index.js"],"names":["module","exports","Title","text","className","style","title_top","Steps","steps","step","stepActive","initialState","dataSubmit","companyName","numberPeople","businesArea","description","file","CompanyName","isValid","message","NumberPeople","BusinesArea","Description","setValidFieldAC","boolean","nameField","type","App_Reducer","state","action","value","InputFile","useState","countFiles","setCountFiles","dispatch","useDispatch","htmlFor","data-text","src","folderSvg","alt","id","inputHide","multiple","onChange","e","target","files","length","setFileInputValueAC","Field","textLabel","textPlaceholder","required","resize","FieldName","validator","handleChange","objValue","this","setDataSubmitAC","onBlur","test","placeholder","Alert","warning","icon","error","success","Forma","props","showSuccess","setShowSuccess","forma","onSubmit","preventDefault","data","setValidField","isRequiredField","setShow","ms","n","console","log","setTimeout","inputTop__wrapper","yourCompany__wrapper","NumberOfPeople__wrapper","BusinessArea__wrapper","textarea__wrapper","addFile__wrapper","btn_submit","compose","connect","App","Boolean","window","location","hostname","match","reducers","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.dccd88bc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"forma\":\"Forma_forma__np1yO\",\"inputTop__wrapper\":\"Forma_inputTop__wrapper__nt4Mt\",\"yourCompany__wrapper\":\"Forma_yourCompany__wrapper__1rDMv\",\"NumberOfPeople__wrapper\":\"Forma_NumberOfPeople__wrapper__7Q1YO\",\"BusinessArea__wrapper\":\"Forma_BusinessArea__wrapper__ug0Mb\",\"textarea__wrapper\":\"Forma_textarea__wrapper__10aJe\",\"addFile__wrapper\":\"Forma_addFile__wrapper__3y-wE\",\"inputHide\":\"Forma_inputHide__2rsH8\",\"btn_submit\":\"Forma_btn_submit__24vrv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"warning\":\"Alert_warning__2FxWH\",\"success\":\"Alert_success__36r2t\",\"error\":\"Alert_error__1w_HX\",\"alertAnim\":\"Alert_alertAnim__z5ht7\",\"icon\":\"Alert_icon__2OjL2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"steps\":\"Steps_steps__3LwTA\",\"step\":\"Steps_step__3LqFK\",\"stepActive\":\"Steps_stepActive__Xcvou\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title_top\":\"Title_title_top__2qDGi\"};","module.exports = __webpack_public_path__ + \"static/media/Folder.98bf746b.svg\";","module.exports = __webpack_public_path__ + \"static/media/warning.a4c1d7a1.svg\";","module.exports = __webpack_public_path__ + \"static/media/error.30f6810e.svg\";","module.exports = __webpack_public_path__ + \"static/media/success.f0977122.svg\";","import React from 'react';\r\nimport style from './Title.module.scss';\r\n\r\nconst Title = ({text}) => {\r\n   return (\r\n      <>\r\n         <h1 className={style.title_top}>{text}</h1>\r\n      </>\r\n   );\r\n}\r\n\r\nexport default Title;\r\n","import React from 'react';\r\nimport style from './Steps.module.scss';\r\n\r\nconst Steps = () => {\r\n   return (\r\n      <div className={style.steps}>\r\n         <div className={style.step}>1</div>\r\n         <div className={style.step}>2</div>\r\n         <div className={`${style.step} ${style.stepActive}`}>3</div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Steps;\r\n","const SET_IS_COMPANY_NAME = 'app-reducer/SET_IS_COMPANY_NAME'\r\nconst SET_DATA_SUBMIT = 'app-reducer/SET_DATA_SUBMIT'\r\nconst SET_FILE_INPUT_VALUE = 'app-reducer/SET_FILE_INPUT_VALUE'\r\n\r\nconst initialState = {\r\n   dataSubmit: {\r\n      companyName: null,\r\n      numberPeople: null,\r\n      businesArea: null,\r\n      description: null,\r\n      file: null,\r\n   },\r\n\r\n   CompanyName: {\r\n      isValid: true,\r\n      message: ''\r\n   },\r\n   NumberPeople: {\r\n      isValid: true,\r\n      message: ''\r\n   },\r\n   BusinesArea: {\r\n      isValid: true,\r\n      message: ''\r\n   },\r\n   Description: {\r\n      isValid: true,\r\n      message: ''\r\n   },\r\n\r\n}\r\n\r\nconst App_Reducer = (state = initialState, action) => {\r\n   switch (action.type) {\r\n      case SET_IS_COMPANY_NAME:\r\n         switch (action.nameField) {\r\n            case 'companyName':\r\n               return {\r\n                  ...state,\r\n                  CompanyName: {\r\n                     isValid: action.boolean,\r\n                     message: action.message\r\n                  }\r\n               }\r\n            case 'numberPeople':\r\n               return {\r\n                  ...state,\r\n                  NumberPeople: {\r\n                     isValid: action.boolean,\r\n                     message: action.message\r\n                  }\r\n               }\r\n            case 'businesArea':\r\n               return {\r\n                  ...state,\r\n                  BusinesArea: {\r\n                     isValid: action.boolean,\r\n                     message: action.message\r\n                  }\r\n               }\r\n            case 'description':\r\n               return {\r\n                  ...state,\r\n                  Description: {\r\n                     isValid: action.boolean,\r\n                     message: action.message\r\n                  }\r\n               }\r\n            default:\r\n               return state;\r\n         }\r\n      case SET_DATA_SUBMIT:\r\n         return {\r\n            ...state,\r\n            dataSubmit: {\r\n               ...state.dataSubmit,\r\n               ...action.value\r\n            }\r\n         }\r\n      case SET_FILE_INPUT_VALUE:\r\n         return {\r\n            ...state,\r\n            dataSubmit: {\r\n               ...state.dataSubmit,\r\n               file: action.value\r\n            }\r\n         }\r\n      default:\r\n         return state\r\n   }\r\n}\r\n\r\nexport const setValidFieldAC = (boolean, nameField, message) => ({\r\n   type: SET_IS_COMPANY_NAME,\r\n   boolean, nameField, message\r\n})\r\n\r\nexport const setDataSubmitAC = (value) => ({\r\n   type: SET_DATA_SUBMIT,\r\n   value\r\n})\r\n\r\nexport const setFileInputValueAC = (value) => ({\r\n   type: SET_FILE_INPUT_VALUE,\r\n   value\r\n})\r\n\r\nexport default App_Reducer;","import React, { useState } from 'react';\r\nimport style from './Forma.module.scss';\r\nimport folderSvg from '../../assets/Folder.svg';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setFileInputValueAC } from '../../redux/forma-reducer';\r\n\r\nconst InputFile  = () => {\r\n   const [countFiles, setCountFiles] = useState(0)\r\n   const dispatch = useDispatch()\r\n\r\n   const hendleChange = (e) => {\r\n      const value = e.target.files\r\n      setCountFiles(value.length)\r\n      dispatch(setFileInputValueAC(value))\r\n   }\r\n\r\n   return (\r\n      <>\r\n         <label htmlFor=\"inputFile\" data-text={`${countFiles} files attached`}>\r\n            <img src={folderSvg} alt=\"\" />\r\n            <span>Add file as attachment</span>\r\n         </label>\r\n         <input\r\n            type=\"file\"\r\n            id=\"inputFile\"\r\n            className={style.inputHide}\r\n            multiple\r\n            onChange={hendleChange}\r\n         />\r\n      </>\r\n   );\r\n}\r\n\r\nexport default InputFile ;\r\n","import React from 'react';\r\nimport './Field.scss';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setDataSubmitAC, setValidFieldAC } from '../../../redux/forma-reducer';\r\n\r\nconst Field = ({ type = 'text', textLabel = 'Label', textPlaceholder = 'Type text',\r\n   required = false, resize = false, FieldName,\r\n   validator }) => {\r\n   const dispatch = useDispatch()\r\n\r\n   const handleChange = (e) => {\r\n      let value = e.target.value\r\n\r\n      //Установка значения поля\r\n      function InputValue(FieldName) {\r\n         switch (FieldName) {\r\n            case 'companyName':\r\n               this.companyName = value\r\n               break;\r\n            case 'numberPeople':\r\n               this.numberPeople = value\r\n               break\r\n            case 'businesArea':\r\n               this.businesArea = value\r\n               break\r\n            case 'description':\r\n               this.description = value\r\n               break\r\n            default:\r\n               break;\r\n         }\r\n      }\r\n\r\n      let objValue = new InputValue(FieldName)\r\n\r\n      dispatch(setDataSubmitAC(objValue))\r\n\r\n      //Валидация при вводе\r\n      //установка валидного поля\r\n      if (value !== '') {\r\n         dispatch(setValidFieldAC(true, FieldName, ''))\r\n      }\r\n   }\r\n\r\n   //Валидация при потере фокуса\r\n   const onBlur = (e) => {\r\n      let value = e.target.value\r\n\r\n      if (value === '' && required) {\r\n         dispatch(setValidFieldAC(false, FieldName, 'This field in required'))\r\n      }\r\n\r\n      //валидация поля \"Number of people\"\r\n      if (FieldName === 'numberPeople' && (value < 1 || value > 99)) {\r\n         dispatch(setValidFieldAC(false, FieldName, 'Please enter number from 1 to 99'))\r\n      }\r\n      if (FieldName === 'numberPeople' && /^0/i.test(value)) {\r\n         dispatch(setValidFieldAC(false, FieldName, 'A number cannot start from zero'))\r\n      }\r\n\r\n      //Проверка на максимальное количество символов в поле Description.\r\n      // const maxValue = 100\r\n      // if (FieldName === 'description' && value.length > maxValue){\r\n      //   dispatch(setValidFieldAC(false, FieldName, `Must be ${maxValue} characters or less`)) \r\n      // }\r\n   }\r\n\r\n   return (\r\n      <>\r\n         <label\r\n            htmlFor=\"Field_label\"\r\n            className={required ? \"requiredField\" : null}\r\n         >{textLabel}</label>\r\n\r\n         {\r\n            (type === 'text' || type === 'number') &&\r\n            <input\r\n               type={type}\r\n               placeholder={textPlaceholder}\r\n               id=\"Field_label\"\r\n               onChange={handleChange}\r\n               onBlur={onBlur}\r\n               className={validator.isValid ? null : 'noValidField'}\r\n            />\r\n         }\r\n         {\r\n            type === 'textarea' &&\r\n            <textarea\r\n               placeholder={textPlaceholder}\r\n               id='Field_label'\r\n               className={validator.isValid ? null : 'noValidField'}\r\n               onChange={handleChange}\r\n               onBlur={onBlur}\r\n               style={resize ? null : { resize: 'none' }}\r\n            />\r\n         }\r\n\r\n         {!validator.isValid &&\r\n            <p className=\"error__description\">{validator.message}</p>\r\n         }\r\n         \r\n      </>\r\n   );\r\n}\r\n\r\nexport default Field;\r\n","import React from 'react';\r\nimport style from './Alert.module.scss';\r\nimport warning from '../../assets/warning.svg';\r\nimport error from '../../assets/error.svg';\r\nimport success from '../../assets/success.svg';\r\n\r\nconst Alert = ({ type, text }) => {\r\n   return (\r\n      <>\r\n         {type === 'warning' &&\r\n            <div className={style.warning} >\r\n               <img src={warning} alt=\"warning\" className={style.icon} />\r\n               {text}\r\n            </div>\r\n         }\r\n\r\n         {type === \"error\" &&\r\n            <div className={style.error} >\r\n               <img src={error} alt=\"error\" className={style.icon} />\r\n               {text}\r\n            </div>\r\n         }\r\n\r\n         {type === 'success' &&\r\n            <div className={style.success} >\r\n               <img src={success} alt=\"success\" className={style.icon} />\r\n               {text}\r\n            </div>\r\n         }\r\n\r\n      </>\r\n   );\r\n}\r\n\r\nexport default Alert;\r\n","import React, { useState } from 'react';\r\nimport style from './Forma.module.scss';\r\nimport AddFile from './InputFile ';\r\nimport { isRequiredField } from '../module/isRequiredField';\r\nimport Field from '../module/Field';\r\nimport Alert from '../Alert';\r\n\r\nconst Forma = (props) => {\r\n   const [showSuccess, setShowSuccess] = useState(false)\r\n\r\n   const hendleSubmit = (e) => {\r\n      e.preventDefault()\r\n\r\n      //Функция показывает алерт \r\n      //showAlert(callback, number)\r\n      const showAlert = (setShow, ms) => {\r\n         setShow(true)\r\n         setTimeout(() => {\r\n           setShow(false)\r\n         }, ms);\r\n      }\r\n\r\n      const data = props.dataSubmit;\r\n\r\n      //Валидация пустых обязательных полей \r\n      //isRequiredField (dataSubmit{}, actionCreator)\r\n      isRequiredField(data, props.setValidFieldAC)\r\n\r\n      //Submit\r\n      const n = data.numberPeople\r\n      const submitOk = (!!n && n <= 99 && n > 0)\r\n         && !!data.businesArea\r\n         && !!data.description\r\n\r\n      if (submitOk) {\r\n         console.log(data);\r\n         showAlert(setShowSuccess, 4000)\r\n       } \r\n   }\r\n\r\n   return (\r\n      <form className={style.forma} onSubmit={hendleSubmit}>\r\n\r\n         {showSuccess &&\r\n            <Alert\r\n               type=\"success\"\r\n               text=\"Data added successfully\"\r\n            />\r\n         }\r\n\r\n         <div className={style.inputTop__wrapper}>\r\n            <div className={style.yourCompany__wrapper}>\r\n               <Field\r\n                  type='text'\r\n                  textLabel='Your company name'\r\n                  textPlaceholder='Type text'\r\n                  required={false}\r\n                  validator={props.CompanyName}\r\n                  FieldName='companyName'\r\n               />\r\n            </div>\r\n\r\n            <div className={style.NumberOfPeople__wrapper}>\r\n               <Field\r\n                  type='number'\r\n                  textLabel='Number of people'\r\n                  textPlaceholder='1-99'\r\n                  required={true}\r\n                  validator={props.NumberPeople}\r\n                  FieldName='numberPeople'\r\n               />\r\n            </div>\r\n         </div>\r\n\r\n         <div className={style.BusinessArea__wrapper}>\r\n            <Field\r\n               type='text'\r\n               textLabel='Business area'\r\n               textPlaceholder='Type text'\r\n               required={true}\r\n               validator={props.BusinesArea}\r\n               FieldName='businesArea'\r\n            />\r\n         </div>\r\n\r\n         <div className={style.textarea__wrapper}>\r\n            <Field\r\n               validator={props.Description}\r\n               type='textarea'\r\n               textLabel='Description'\r\n               textPlaceholder='Type text'\r\n               resize={false}\r\n               required={true}\r\n               FieldName='description'\r\n            />\r\n         </div>\r\n\r\n         <div className={style.addFile__wrapper}>\r\n            <AddFile />\r\n         </div>\r\n\r\n         <button className={style.btn_submit}>Submit</button>\r\n      </form>\r\n   );\r\n}\r\n\r\nexport default Forma;\r\n","export const isRequiredField = (data, setValidField) => {\r\n   // if (data.companyName === '' || data.description === null) {\r\n   //    setValidField(false, 'companyName', 'This field in required')\r\n   // }\r\n   if (data.numberPeople === '' || data.numberPeople === null) {\r\n      setValidField(false, 'numberPeople', 'This field in required')\r\n   }\r\n   if (data.businesArea === '' || data.businesArea === null) {\r\n      setValidField(false, 'businesArea', 'This field in required')\r\n   }\r\n   if (data.description === '' || data.description === null) {\r\n      setValidField(false, 'description', 'This field in required')\r\n   }\r\n}","import React from 'react';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport Forma from './Forma';\r\nimport { setValidFieldAC } from '../../redux/forma-reducer';\r\n\r\nconst FormaContainer = (props) => {\r\n   return <Forma {...props} />\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n   dataSubmit: state.forma.dataSubmit,\r\n   CompanyName: state.forma.CompanyName,\r\n   NumberPeople: state.forma.NumberPeople,\r\n   BusinesArea: state.forma.BusinesArea,\r\n   Description: state.forma.Description,\r\n})\r\n\r\nexport default compose(\r\n   connect(mapStateToProps, {\r\n      setValidFieldAC\r\n   })\r\n)(FormaContainer)\r\n","import React from 'react';\nimport './App.scss';\nimport Title from './components/Title';\nimport Steps from './components/Steps';\nimport FormaContainer from './components/Forma/FormaContainer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n      <Title text='Your first project' />\n\n      <Steps />\n\n      <FormaContainer />\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createStore, combineReducers } from \"redux\";\r\nimport forma from './forma-reducer';\r\n\r\nconst reducers = combineReducers({\r\n   forma,\r\n})\r\n\r\nexport const store = createStore(reducers)\r\n\r\n \r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { store } from './redux/redux-store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}